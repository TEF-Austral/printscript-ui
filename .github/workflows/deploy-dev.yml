name: Deploy to Development

on:
  push:
    branches: [ release ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  # ========== VERSIONING ==========
  versioning:
    uses: ./.github/workflows/versioning.yml
    with:
      commit_version: false  # No commitear en DEV
    secrets: inherit

  # ========== BUILD & DEPLOY ==========
  build-and-deploy-dev:
    needs: versioning
    runs-on: ubuntu-latest
    environment: development

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Grant execute permission
        run: chmod +x ./gradlew

      # ========== BUILD GRADLE ==========
      - name: Build with Gradle
        run: ./gradlew build --no-daemon

      # ========== BUILD & PUSH DOCKER ==========
      - name: Set image name
        id: image
        run: |
          echo "name=$(echo 'ghcr.io/${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push Docker image (DEV)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.dev
          push: true
          tags: |
            ${{ steps.image.outputs.name }}:dev
            ${{ steps.image.outputs.name }}:dev-${{ needs.versioning.outputs.version }}
            ${{ steps.image.outputs.name }}:dev-${{ github.sha }}

      # ========== NOTIFY PROVISIONER ==========
      - name: Notify provisioner (DEV)
        run: |
          curl -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.GH_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository_owner }}/png-provisioner/dispatches \
            -d '{
              "event_type": "service_updated",
              "client_payload": {
                "service": "${{ github.event.repository.name }}",
                "environment": "dev",
                "version": "${{ needs.versioning.outputs.version }}",
                "image_tag": "dev",
                "sha": "${{ github.sha }}"
              }
            }'